### 2. IMPORT DATASETS ###

BCI <- read.csv("data/BCI.csv")
BCI_env <- read.table("data/BCI_env.txt", 
                      fill = T,                 # importare dataset nonostante errori
                      header = T,               # usare prima riga come intestazione
                      sep = " ",                # allineare correttamente
                      na.strings = c("", NA))   # presenti oltre a NA anche "vuoti" -> considero come NA

View(BCI_env)  # visualizzo il dataset per capire come comportarmi
View(BCI)

obs_number <- nrow(BCI_env)
obs_number                   # numero di osservazioni [50] (numero di righe di entrambi i datasets)

sp_number <- ncol(BCI)       # numero di specie [225] (colonne di BCI, colonne della community matrix)
sp_number

env_variables <- ncol(BCI_env)  # numero variabili ambientali [9] (colonne di BCI_env)
env_variables

### 3. MATCHING COLUMN - DATA TYPES ###

library(vegan)
?BCI
str(BCI_env)
str(BCI_env)
summary(BCI_env)
summary(BCI)

##### TEST ####

### 4
index_na <- which(is.na(BCI_env), arr.ind = T) 
index_na[, 1]                                    

BCI_env <- na.omit(BCI_env) 
BCI <- BCI[-(index_na[, 1]), ] 

nrow(BCI) 
nrow(BCI_env)
ncol(BCI)
ncol(BCI_env)

### 5     # CHIEDERE BARPLOT 2 VARIABILI E LUMI SU ENVHET
hist(BCI_env$Habitat)       # error  (solved)
barplot(BCI_env$Habitat)    # error (solved)


table(BCI_env$Habitat)
barplot(table(BCI_env$Habitat))

### 6
BCI <- decostand(BCI, method = "pa")
head(BCI)

### 7
specnumber(BCI, MARGIN = 2) 
round((specnumber(BCI, MARGIN = 2) / nrow(BCI)) * 100, 2) 
specnumber(BCI)
BCI_env$sr <- specnumber(BCI)   

### 8  # LUMI SU GRAFICI E TEST     # PROVARE PLOT SR E ENVHET
boxplot(BCI_env$sr ~ BCI_env$Habitat)

plot(BCI_env$EnvHet, BCI_env$sr)
cor.test(BCI_env$EnvHet, BCI_env$sr)         

summary(lm(sr ~ EnvHet, data = BCI_env))

plot(BCI_env$UTM.NS, BCI_env$sr)
cor.test(BCI_env$UTM.NS, BCI_env$sr)
         
